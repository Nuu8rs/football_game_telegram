from aiogram import Bot
from aiohttp.web import Response
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from webhook_api.schemas import MonoResultSchema
from ..base_endpoint import EndPoint, HTTPMethod

from database.models.payment.change_position_payment import ChangePositionPayment

from services.payment_service import PaymentServise
from services.character_service import CharacterService
from config import BOT_TOKEN

class MonoResultChangePosition(EndPoint):
    schema = MonoResultSchema
    data: MonoResultSchema
    method = HTTPMethod.POST
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

    TEXT_TEMPLATE = """
<b>–í—ñ—Ç–∞—î–º–æ! üéâ</b>

–¢–≤—ñ–π —Ñ—É—Ç–±–æ–ª—ñ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–∏–≤ –ø–æ–∑–∏—Ü—ñ—é!‚öΩ
–¢–≤–æ—è –Ω–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è - <u><b>{new_position_name}</b></u>  
–¢–µ–ø–µ—Ä –≤—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ –Ω–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤ –Ω–∞ –ø–æ–ª—ñ. –ü–∞–º‚Äô—è—Ç–∞–π:  
üö® <b>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –±—É–ª–æ –æ–Ω–æ–≤–ª–µ–Ω–æ</b>.  
–ù–∞ –Ω–æ–≤—ñ–π –ø–æ–∑–∏—Ü—ñ—ó —Ç–≤–æ—è –±–æ–π–æ–≤–∞ —Å–∏–ª–∞ –∑–∞–ª–µ–∂–∞—Ç–∏–º–µ –≤—ñ–¥ —ñ–Ω—à–∏—Ö –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç—ñ–≤, —è–∫—ñ —ñ–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥—è—Ç—å –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó —Ä–æ–ª—ñ.  

–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–±—ñ—Ä –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É! –ë–∞–∂–∞—î–º–æ —É—Å–ø—ñ—Ö—É —Ç–∞ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏—Ö –¥–æ—Å—è–≥–Ω–µ–Ω—å –Ω–∞ –ø–æ–ª—ñ! üí™üèÜ
"""
    
    async def handle_request(self) -> Response:
        payment: ChangePositionPayment = await PaymentServise.get_payment(
            order_id=self.data.invoiceId,
            type_payment = ChangePositionPayment
        )
        
        if not payment:
            return
        
        if self.data.status != "success":
            return
        
        if payment.payment.status:
            return
        
        character = await CharacterService.get_character(payment.payment.user_id)
        await CharacterService.change_position(
            character_id = character.id,
            position = payment.position.value
        )

        await self.bot.send_message(
            chat_id = payment.payment.user_id,
            text    = self.TEXT_TEMPLATE.format(
                new_position_name = payment.position.value)
        )
        await PaymentServise.change_payment_status(order_id=self.data.invoiceId)
        return self.OK()


