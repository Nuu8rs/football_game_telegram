from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from database.models.character import Character
from services.reminder_character_service import RemiderCharacterService
from bot.keyboards.pvp_duels_keyboard import find_oponent_user_duel, leave_pool_find_oponent

from bot.filters.check_duel_filter import CheckDuelStatus
from pvp_duels.duel_core import CoreDuel
from pvp_duels.duel_manager import DuelManager
find_user_duel_router = Router()

@find_user_duel_router.message(F.text == "ü•Ö –ü–í–ü-–ø–µ–Ω–∞–ª—å—Ç—ñ")
async def find_user_duel_handler(message: Message, character: Character):
    if character.reminder.character_in_duel:
        if not DuelManager.character_in_duel(character):
            await RemiderCharacterService.edit_status_duel_character(
                character_id=character.id,
                status=False
            )
        else:
            return message.answer("–í–∏ –≤–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å—ñ –ü–í–ü-–ø–µ–Ω–∞–ª—Ç—ñ")
    
    await message.answer(
        text = """
<b>–ü–æ—à—É–∫ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Å—É–ø–µ—Ä–Ω–∏–∫–∞</b> ‚öîÔ∏è

–ì–æ—Ç–æ–≤—ñ –≤—Å—Ç—É–ø–∏—Ç–∏ –≤ –±–∏—Ç–≤—É –Ω–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–º—É –ø–æ–ª—ñ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–≤–æ—ó —Å–∏–ª–∏?
–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ–¥–±–µ—Ä–µ –¥–ª—è –≤–∞—Å –≥—ñ–¥–Ω–æ–≥–æ —Å—É–ø–µ—Ä–Ω–∏–∫–∞ –ù—ñ–∫–æ–ª–∏ –Ω–µ –∑–Ω–∞—î—à, –∑ –∫–∏–º –∑—ñ—Ç–∫–Ω–µ—à—Å—è - —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ —è–∫ —Ä—ñ–≤–Ω–∏–π –∑–∞ —Å–∏–ª–æ—é –≥—Ä–∞–≤–µ—Ü—å, —Ç–∞–∫ —ñ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —á–µ–º–ø—ñ–æ–Ω, –≥–æ—Ç–æ–≤–∏–π –∫–∏–Ω—É—Ç–∏ –≤–∞–º –≤–∏–∫–ª–∏–∫.

<b>–ü–æ—á–Ω—ñ—Ç—å –ø–æ—à—É–∫ —ñ –¥—ñ–∑–Ω–∞–π—Ç–µ—Å—è, —Ö—Ç–æ —Å—Ç–∞–Ω–µ –≤–∞—à–∏–º –≤–æ—Ä–æ–≥–æ–º —Å—å–æ–≥–æ–¥–Ω—ñ! –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å –æ—Ç—Ä–∏–º–∞—î –µ–Ω–µ—Ä–≥—ñ—é!</b>
        """,
        reply_markup=find_oponent_user_duel()
    )
    
@find_user_duel_router.callback_query(F.data == "find_enemy_duel")
async def add_to_pool_finder_enemy_duel_handler(query: CallbackQuery, character: Character):
    await CoreDuel.add_user_to_pool(character)
    await RemiderCharacterService.edit_status_duel_character(
        character_id=character.id, 
        status=True)
    await query.message.edit_text("""
–í–∏ –≤ –ø—É–ª—ñ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è! üéØ

–ú–∏ –ø–æ—á–∞–ª–∏ –ø–æ—à—É–∫ –≥—ñ–¥–Ω–æ–≥–æ —Å—É–ø–µ—Ä–Ω–∏–∫–∞ –¥–ª—è –≤–∞—à–æ—ó —Ñ—É—Ç–±–æ–ª—å–Ω–æ—ó –¥—É–µ–ª—ñ. –¶–µ –∑–∞–π–º–µ –Ω–µ–±–∞–≥–∞—Ç–æ —á–∞—Å—É - —Å–∏—Å—Ç–µ–º–∞ –ø—ñ–¥–±–∏—Ä–∞—î –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, —è–∫–∏–π –≥–æ—Ç–æ–≤–∏–π –±–∏—Ç–∏—Å—è –∑ –≤–∞–º–∏

üïê –ß–µ–∫–∞–π—Ç–µ - –ø–æ—à—É–∫ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥ –∞–±–æ —Ö–≤–∏–ª–∏–Ω, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –≥—Ä–∞–≤—Ü—ñ–≤. –£ –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ –∑'—è–≤–∏—Ç–∏—Å—è —Ç–æ–π, —Ö—Ç–æ –∫–∏–Ω–µ –≤–∞–º –≤–∏–∫–ª–∏–∫!
–ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ñ! –°–∫–æ—Ä–æ –ø–æ—á–Ω–µ—Ç—å—Å—è –±–∏—Ç–≤–∞, —ñ –≤—ñ–¥ –≤–∞—Å –≤–∏–º–∞–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –º–∞–∫—Å–∏–º—É–º –µ–Ω–µ—Ä–≥—ñ—ó —Ç–∞ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—ó.‚ö°

–Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –∑ –ø—É–ª—É, –Ω–∞–∂–º—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∑–Ω–∏–∑—É""",
    reply_markup= leave_pool_find_oponent()
    )
    
@find_user_duel_router.callback_query(F.data == "leave_pool_find_oponent")
async def leave_from_pool_find_enemy_duel_handler(query: CallbackQuery, character: Character):
    await CoreDuel.remove_user_from_pool(character)
    await RemiderCharacterService.edit_status_duel_character(
        character_id=character.id, 
        status=False)
    await query.message.edit_text("""
<b>–í–∏ –≤–∏–π—à–ª–∏ –∑ –ø–æ—à—É–∫—É —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!</b> üö´

–í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ –ø–æ—à—É–∫ –±—É–≤ —Å–∫–∞—Å–æ–≤–∞–Ω–∏–π. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥—Ä—É –≤ –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç, —â–æ–± –∑–Ω–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ —Ç–∞ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –±–∏—Ç–≤—É!
–ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ, —â–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –¥–ª—è –¥—É–µ–ª–µ–π –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á!""")