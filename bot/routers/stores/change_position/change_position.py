from aiogram import Router, F
from aiogram.types import CallbackQuery

from api.monobank.create_payment import CreatePayment

from bot.callbacks.change_position_callbacks import SelectPosition
from bot.keyboards.change_position_keyboard import (
    select_position,
    buy_change_position
)

from database.models.character import Character

from services.payment_service import PaymentServise

from constants import (
    CHANGE_POSITION_PHOTO, 
    PRICE_CHANGE_POSITION, 
    PositionCharacter
)
from config import (
    CALLBACK_URL_WEBHOOK_CHANGE_POSITION, 
    POSITION_COEFFICIENTS
) 


change_position_router = Router()

@change_position_router.callback_query(
    F.data == "change_position"
)
async def change_position_handler(
    query: CallbackQuery,
    character: Character
):
    text = f"""
–°—Ç–∞–Ω—å –ª–µ–≥–µ–Ω–¥–æ—é —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è! üèÜ

–•–æ—á–µ—à –≤–∏–≤–µ—Å—Ç–∏ —Å–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –Ω–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å? üî• –ó–º—ñ–Ω—é–π –ø–æ–∑–∏—Ü—ñ—é —ñ —Å—Ç–∞–Ω—å –≥—Ä–∞–≤—Ü–µ–º, —è–∫–∏–π —Ç–≤–æ—Ä–∏—Ç—å —ñ—Å—Ç–æ—Ä—ñ—é! –í—ñ–¥ –Ω–∞–¥—ñ–π–Ω–æ–≥–æ –∑–∞—Ö–∏—Å–Ω–∏–∫–∞ –¥–æ –º–æ–ª–Ω–∏—î–Ω–æ—Å–Ω–æ–≥–æ –Ω–∞–ø–∞–¥–Ω–∏–∫–∞ ‚Äì —Ç–µ–ø–µ—Ä —Ç–∏ –≤–∏—Ä—ñ—à—É—î—à, —è–∫ –±—É–¥–µ —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—è —Ç–≤–æ—è –∫–∞—Ä'—î—Ä–∞ –≤ –≥—Ä—ñ.

üíº –©–æ —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à:
‚úÖ –ù–æ–≤—ñ —ñ–≥—Ä–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ.
‚úÖ –ü–µ—Ä–µ–≤–∞–≥—É –≤ –º–∞—Ç—á–∞—Ö —Ç–∞ —Ç—É—Ä–Ω—ñ—Ä–∞—Ö.

üí∞ –¶—ñ–Ω–∞ –∑–º—ñ–Ω–∏ –ø–æ–∑–∏—Ü—ñ—ó ‚Äì –≤—Å—å–æ–≥–æ <s><b>250</b></s> (<u><b>{PRICE_CHANGE_POSITION}</b></u>) –≥—Ä–Ω!
–û–¥–∏–Ω —Ä–∞–∑ –∑–º—ñ–Ω–∏–≤—à–∏ –ø–æ–∑–∏—Ü—ñ—é, —Ç–∏ –∑–º–æ–∂–µ—à –ø–æ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞ –≥—Ä—É –∑ —ñ–Ω—à–æ–≥–æ –±–æ–∫—É —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–∞–∫—Å–∏–º—É–º –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ–∂–Ω–æ–≥–æ –º–∞—Ç—á—É.

üì≤ –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ —à–∞–Ω—Å!
"""

    await query.message.answer_photo(
        photo=CHANGE_POSITION_PHOTO,
        caption = text,
        reply_markup = select_position(character.position_enum)
    )
    
    
@change_position_router.callback_query(
    SelectPosition.filter()
)
async def select_new_position(
    query: CallbackQuery,
    character: Character,
    callback_data: SelectPosition
):
    
    text = """
üö® <b>–£–≤–∞–≥–∞!</b> üö®
–ü—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –ø–æ–∑–∏—Ü—ñ—ó, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –º–æ–∂—É—Ç—å –∑–º—ñ–Ω–∏—Ç–∏—Å—è. –ë—É–¥—å –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ç–æ–≥–æ, —â–æ —Ç–≤–æ—é –±–æ–π–æ–≤—É —Å–∏–ª—É —Ç–µ–ø–µ—Ä –≤–∏–∑–Ω–∞—á–∞—Ç–∏–º—É—Ç—å –Ω–æ–≤—ñ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∑ –ø–æ–∑–∏—Ü—ñ–π!

üîª –ó–º—ñ–Ω–∏ –≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö:
<b>üéØ –¢–µ—Ö–Ω—ñ–∫–∞:</b> –¢–≤–æ—è –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—é–≤–∞—Ç–∏ –º'—è—á, –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ —Ç–æ—á–Ω—ñ –ø–µ—Ä–µ–¥–∞—á—ñ
–ó–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–º—ñ–Ω–∏: [{old_technique:.2f}] -> –ó–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏: [{new_technique:.2f}]
 
<b>ü•ã –£–¥–∞—Ä–∏:</b> –¢–≤–æ—è —Å–∏–ª–∞ —É–¥–∞—Ä—ñ–≤ –ø–æ –≤–æ—Ä–æ—Ç–∞—Ö –∑–º—ñ–Ω—è—Ç—å—Å—è
–ó–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–º—ñ–Ω–∏: [{old_effective_kicks:.2f}] -> –ó–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏: [{new_effective_kicks:.2f}]

<b>üõ°Ô∏è –í—ñ–¥–±—ñ—Ä –º‚Äô—è—á–∞:</b> –ü–æ–∑–∏—Ü—ñ—è –∑–º—ñ–Ω—é—î –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤–∏–±–æ—Ä—É –º'—è—á–∞.
–ó–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–º—ñ–Ω–∏: [{old_effective_ball_selection:.2f}] -> –ó–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏: [{new_effective_ball_selection:.2f}]

<b>üèÉ –í–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</b> –¢–≤–æ—è –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –≤–∏—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ñ—ñ–∑–∏—á–Ω–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–∏—Ç—å—Å—è.
–ó–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–º—ñ–Ω–∏: [{old_effective_endurance:.2f}] -> –ó–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏: [{new_effective_endurance:.2f}]

<b>‚ö° –®–≤–∏–¥–∫—ñ—Å—Ç—å:</b> –¢–≤–æ—è –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å —Ä—É—Ö–∞—Ç–∏—Å—è –ø–æ –ø–æ–ª—é —Ç–µ–ø–µ—Ä –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏–º–µ –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ.
–ó–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–º—ñ–Ω–∏: [{old_effective_speed:.2f}] -> –ó–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏: [{new_effective_speed:.2f}]
""".format(
    old_technique        = get_params(character.technique, character.position_enum, "technique"),
    old_effective_kicks = get_params(character.kicks, character.position_enum, "kicks"),
    old_effective_ball_selection = get_params(character.ball_selection, character.position_enum, "ball_selection"),
    old_effective_endurance = get_params(character.endurance, character.position_enum, "endurance"),
    old_effective_speed = get_params(character.speed, character.position_enum, "speed"),
    
    new_technique       = get_params(character.technique, callback_data.position, "technique"),
    new_effective_kicks = get_params(character.kicks, callback_data.position, "kicks"),
    new_effective_ball_selection = get_params(character.ball_selection, callback_data.position, "ball_selection"),
    new_effective_endurance = get_params(character.endurance, callback_data.position, "endurance"),
    new_effective_speed = get_params(character.speed, callback_data.position, "speed")
)
    payment = CreatePayment(
        price=PRICE_CHANGE_POSITION,
        name_product="–ó–º—ñ–Ω–∞ –ø–æ–∑—ñ—Ü—ñ—ó",
        webhook_url=CALLBACK_URL_WEBHOOK_CHANGE_POSITION
    )
    url_payment_response = await payment.send_request()
    if not url_payment_response:
        return await query.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É")
    
    order_id = url_payment_response['invoiceId']
    url_payment = url_payment_response['pageUrl']
    
    await query.message.edit_caption(
        caption=text,
        reply_markup=buy_change_position(
            url_payment=url_payment,
            new_position_name = callback_data.position.value
        )

    )
    payment = await PaymentServise.create_payment(
        price    = PRICE_CHANGE_POSITION,
        user_id  = character.characters_user_id,
        order_id = order_id,
    )
    
    await PaymentServise.create_change_position_payment(
        order_id = payment.order_id,
        position = callback_data.position
    )

def get_params(
    old_params: int,
    position: PositionCharacter,
    name_params: str
) -> int:
    
    return old_params * POSITION_COEFFICIENTS[position].get(name_params,1)