from aiogram import Router, F
from aiogram.types import CallbackQuery

from api.monobank.create_payment import CreatePayment

from database.models.character import Character

from bot.callbacks.vip_pass_callbacks import SelectTypeVipPass
from bot.keyboards.vip_pass import (
    select_type_vip_pass,
    buy_vip_pass
)

from services.payment_service import PaymentServise

from constants import VIP_PASS_PHOTO
from config import CALLBACK_URL_WEBHOOK_VIP_PASS

from .types import vip_passes

vip_pass_router = Router()

@vip_pass_router.callback_query(
    F.data == "vip_pass"
)
async def select_type_vip_pass_handler(
    query: CallbackQuery,
):
    text = """
<b>–°—Ç–∞—Ç–∏ VIP ‚Äî —Å—Ç–∞–Ω—å –Ω–∞–π–∫—Ä–∞—â–∏–º —É –≥—Ä—ñ!</b>

–¢–∏ –≥–æ—Ç–æ–≤–∏–π –≤–∏–π—Ç–∏ –Ω–∞ –Ω–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å —ñ –ø—Ä–æ–∫–∞—á–∞—Ç–∏ —Å–≤–æ–≥–æ —Ñ—É—Ç–±–æ–ª—ñ—Å—Ç–∞? –¢–æ–¥—ñ <b>VIP Pass</b> ‚Äî —Ü–µ —Ç–µ, —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ!

üî• <b>–©–æ —Ç–∏ –æ—Ç—Ä–∏–º—É—î—à –∑ VIP Pass:</b>
- <b>üîã300 –µ–Ω–µ—Ä–≥—ñ—ó</b> +150 –∑–∞ –¥–µ–Ω—å! –¢–µ–ø–µ—Ä 300 –µ–Ω–µ—Ä–≥—ñ—ó –∑–∞–º—ñ—Å—Ç—å 150 ‚Äî –±—ñ–ª—å—à–µ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –¥–ª—è –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —É—Å–ø—ñ—Ö—É!
- <b>–•2 –Ω–∞–≥–æ—Ä–æ–¥</b> –∑ –Ω–∞–≤—á–∞–ª—å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É ‚Äî –≤–¥–≤—ñ—á—ñ –±—ñ–ª—å—à–µ –∫–æ—Ä–∏—Å–Ω–∏—Ö –±–æ–Ω—É—Å—ñ–≤ –¥–ª—è —Ç–≤–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—É!
- <b>+5% —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</b> ‚Äî –±—É–¥—å —É–ø–µ–≤–Ω–µ–Ω–∏–π —É —Å–≤–æ—î–º—É —É—Å–ø—ñ—Ö—É —ñ —à–≤–∏–¥—à–µ –¥–æ—Å—è–≥–∞–π –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç!
- <b>VIP —Å—Ç–∞—Ç—É—Å</b> ‚Äî —Ç–µ–ø–µ—Ä —Ç–≤—ñ–π –Ω—ñ–∫ –±—É–¥–µ –≤–∏–¥—ñ–ª—è—Ç–∏—Å—è, –ø–æ–∫–∞–∑—É—é—á–∏ –≤—Å—ñ–º, —Ö—Ç–æ —Ç—É—Ç —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –º–∞–π—Å—Ç–µ—Ä –≥—Ä–∏.

üí• <b>–¶—ñ–Ω–∞ –Ω–∞ VIP Pass:</b>
- <b>7 –¥–Ω—ñ–≤</b> ‚Äî –≤—Å—å–æ–≥–æ 149 –≥—Ä–Ω. (<b>21 –≥—Ä–Ω/–¥–µ–Ω—å</b>)
- <b>30 –¥–Ω—ñ–≤</b> ‚Äî –∑—ñ <b>–∑–Ω–∏–∂–∫–æ—é 22%</b> –∑–∞ 490 –≥—Ä–Ω. (<b>16 –≥—Ä–Ω/–¥–µ–Ω—å</b>)

–ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å —Å—Ç–∞—Ç–∏ —Å–∏–ª—å–Ω—ñ—à–∏–º —ñ —à–≤–∏–¥—à–∏–º –∑–∞ —ñ–Ω—à–∏—Ö! –ü—ñ–¥–≤–∏—â—É–π —Å–≤–æ—ó —à–∞–Ω—Å–∏ –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É, —Å—Ç–∞–≤–∞—Ç–∏ VIP –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ! üíé
"""

    await query.message.answer_photo(
        photo = VIP_PASS_PHOTO,
        caption = text,
        reply_markup = select_type_vip_pass()
    )
    
@vip_pass_router.callback_query(
    SelectTypeVipPass.filter()
)
async def selected_type_vip_pass(
    query: CallbackQuery,
    callback_data: SelectTypeVipPass,
    character: Character
):
    current_vip_pass = vip_passes.get(callback_data.type_vip_pass) 
    
    text = """
<b>–¢–∏ –æ–±—Ä–∞–≤ VIP Pass –Ω–∞ {days} –¥–Ω—ñ–≤!</b>

–û—Ç—Ä–∏–º–∞–π –º–∞–∫—Å–∏–º—É–º –ø–µ—Ä–µ–≤–∞–≥ –¥–ª—è –≥—Ä–∏:
- <b>üîã 300 –µ–Ω–µ—Ä–≥—ñ—ó</b> —â–æ–¥–Ω—è, —â–æ–± –¥–æ—Å—è–≥–∞—Ç–∏ —â–µ –±—ñ–ª—å—à–µ!
- <b>–•2 –Ω–∞–≥–æ—Ä–æ–¥</b> –∑ –Ω–∞–≤—á–∞–ª—å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—É!
- <b>+5% —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</b>, —â–æ–± —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –±—É–ª–∏ —â–µ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–º–∏!
- <b>VIP —Å—Ç–∞—Ç—É—Å</b>, —è–∫–∏–π –≤–∏–¥—ñ–ª–∏—Ç—å —Ç–µ–±–µ —Å–µ—Ä–µ–¥ —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤!

üí• <b>–¶—ñ–Ω–∞:</b> {price} –≥—Ä–Ω (<b>{daily_price:.0f} –≥—Ä–Ω/–¥–µ–Ω—å</b>)

–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏ —Å–≤—ñ–π –≤–∏–±—ñ—Ä, —â–æ–± —Å—Ç–∞—Ç–∏ VIP —ñ –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏—Å—è –Ω–æ–≤–∏–º–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏ —É –≥—Ä—ñ! ‚öΩüíé
""".format(
        days = current_vip_pass.duration,
        price = current_vip_pass.price,
        daily_price = current_vip_pass.day_price
    )
    payment = CreatePayment(
        price        = current_vip_pass.price,
        name_product = callback_data.type_vip_pass.name,
        webhook_url  = CALLBACK_URL_WEBHOOK_VIP_PASS
    )
    url_payment_response = await payment.send_request()
    if not url_payment_response:
        return await query.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É")
    
    order_id = url_payment_response['invoiceId']
    url_payment = url_payment_response['pageUrl']
    
    await query.message.edit_caption(
        caption = text,
        reply_markup = buy_vip_pass(
            url_payment = url_payment,
            duration = current_vip_pass.duration
        )
    )

    payment = await PaymentServise.create_payment(
        price    = current_vip_pass.price,
        user_id  = character.characters_user_id,
        order_id = order_id,
    )
    
    await PaymentServise.create_vip_pass_payment(
        order_id = payment.order_id,
        type_vip_pass = callback_data.type_vip_pass
    )    


