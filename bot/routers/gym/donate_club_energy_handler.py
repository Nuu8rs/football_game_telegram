from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from database.models.character import Character
from database.models.league_fight import LeagueFight

from services.character_service import CharacterService
from services.club_service import ClubService

from bot.callbacks.gym_calbacks import SelectCountDonateEnergy
from bot.keyboards.gym_keyboard import select_donate_energy_keyboard
from bot.states.gym_state import SelectCountDonateEnergyState
from bot.filters.check_time_filter import CheckTimeFilterMessage

from utils.gym_utils import get_text_training_facilities

donate_club_energy_router = Router()


@donate_club_energy_router.message(F.text == "üí™üèª –ü–æ—Å–∏–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏")
async def training_facilities_handler(message: Message, character: Character, state: FSMContext):

    if not character.club_id:
        return await message.answer("‚ùå –í–∏ –Ω–µ –ø–µ—Ä–µ–±—É–≤–∞—î—Ç–µ –≤ –∫–æ–º–∞–Ω–¥—ñ, —Ç–æ–º—É –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥ –∫–æ–º–∞–Ω–¥–∏ –ø–æ—Å–∏–ª–µ–Ω–Ω—è")
    
    await message.answer("–í—ñ—Ç–∞—é –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω—ñ–π –±–∞–∑—ñ\n<b>–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥—ñ—î –ª–∏—à–µ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –º–∞—Ç—á!</b>")
    
    await state.set_state(SelectCountDonateEnergyState.select_count_energy)
    club = await ClubService.get_club(club_id=character.club_id)
    await message.answer(text = get_text_training_facilities(club=club),
                         reply_markup=select_donate_energy_keyboard(
                             club_id=character.club_id
                         ))

@donate_club_energy_router.callback_query(SelectCountDonateEnergy.filter(),
                                           SelectCountDonateEnergyState.select_count_energy,
                                           CheckTimeFilterMessage())
async def select_count_donate_energy_callback_handler(query: CallbackQuery, state: FSMContext,
                                                      character: Character, callback_data: SelectCountDonateEnergy
                                                      ):
    if not character.club_id == callback_data.club_id:
        return await query.answer("–í–∏ –≤–∂–µ –Ω–µ –ø–µ—Ä–µ–±—É–≤–∞—î—Ç–µ –≤ —Ç–æ–π –∫–æ–º–∞–Ω–¥—ñ, —â–æ–± –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é")
        
    if callback_data.count_energy > character.current_energy:
        return await query.answer("–£ –≤–∞—Å –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î –µ–Ω–µ—Ä–≥—ñ—ó —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ —Ü—é –¥—ñ—é")
    
    club = await ClubService.get_club(club_id=character.club_id)
    
    if club.energy_applied + callback_data.count_energy > 500:
        return await query.message.answer("–í–∞—à–∏–º –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –≤–∏ –ø–µ—Ä–µ–≤–∏—â–∏—Ç–µ –ª—ñ–º—ñ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∂–µ—Ä—Ç–≤—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏\n"\
                                          "–í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –Ω–∞ –µ–Ω–µ—Ä–≥—ñ—é –Ω–∞ {max_energy_donate}".format(
                                              max_energy_donate = int(500 - club.energy_applied)
                                          ))
    

    
    await ClubService.donate_energy(club=club, count_energy=callback_data.count_energy)
    await CharacterService.consume_energy(character_obj=character,
                                          energy_consumed=callback_data.count_energy)
    await query.message.answer(f"–í—ñ—Ç–∞—é –≤–∏ –ø–æ–ø–æ–≤–Ω–∏–ª–∏ –µ–Ω–µ—Ä–≥—ñ—é —É —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ {callback_data.count_energy} üîã")
    await state.clear()
    

@donate_club_energy_router.message((F.text.func(str.isdigit)),
                                    SelectCountDonateEnergyState.select_count_energy,
                                    CheckTimeFilterMessage())
async def select_count_donate_energy_message_handler(message: Message, state: FSMContext,
                                                     character: Character):
    count_energy = int(message.text)
    
    if count_energy > character.current_energy:
        return await message.reply("–£ –≤–∞—Å –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î –µ–Ω–µ—Ä–≥—ñ—ó —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ —Ü—é –¥—ñ—é")

    club = await ClubService.get_club(club_id=character.club_id)
    
    if club.energy_applied + count_energy > 500:
        return await message.answer("–í–∞—à–∏–º –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –≤–∏ –ø–µ—Ä–µ–≤–∏—â–∏—Ç–µ –ª—ñ–º—ñ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∂–µ—Ä—Ç–≤—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏\n"\
                                          "–í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –Ω–∞ –µ–Ω–µ—Ä–≥—ñ—é –Ω–∞ {max_energy_donate}".format(
                                              max_energy_donate = int(500 - club.energy_applied)))
        
    await ClubService.donate_energy(club=club, count_energy=count_energy)
    await CharacterService.consume_energy(character_obj=character,
                                          energy_consumed=count_energy)
    await message.answer(f"–í—ñ—Ç–∞—é –≤–∏ –ø–æ–ø–æ–≤–Ω–∏–ª–∏ –µ–Ω–µ—Ä–≥—ñ—é —É —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ {count_energy} üîã")
    await state.clear()

