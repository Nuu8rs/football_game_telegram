from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from api.monobank.create_payment import CreatePayment
from bot.keyboards.gym_keyboard import menu_massage_room, send_payment_keyboard
from bot.callbacks.massage_room_callbacks import SelectCountGetEnergy

from constants import CONST_PRICE_ENERGY, ENERGY_STORE_PHOTO
from config import CALLBACK_URL_WEBHOOK_ENERGY
from database.models.character import Character

from services.payment_service import PaymentServise


massage_room_router = Router()

@massage_room_router.message(F.text == "üè™üîã –ö—Ä–∞–º–Ω–∏—Ü—è –µ–Ω–µ—Ä–≥—ñ—ó")
async def massage_room_handler(message: Message):
    await message.answer_photo(
        photo=ENERGY_STORE_PHOTO,
        caption = (
        "‚ö° –í—ñ—Ç–∞—î–º–æ —É –ö—Ä–∞–º–Ω–∏—Ü—ñ –ï–Ω–µ—Ä–≥—ñ—ó! ‚ö°\n"
        "–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é –¥–ª—è –≤–∞—à–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üí™.\n"
        "–û–Ω–æ–≤—ñ—Ç—å —Å–∏–ª–∏ —ñ –ø—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ —Å–≤–æ—é –ø–æ–¥–æ—Ä–æ–∂! üåü"
        ), 
        reply_markup=menu_massage_room()
    )
    
@massage_room_router.callback_query(F.data == "massage_room")
async def message_room_handler(query: CallbackQuery):
    await query.message.answer_photo(
        photo=ENERGY_STORE_PHOTO,
        caption = (
            "‚ö° –í—ñ—Ç–∞—î–º–æ —É –ö—Ä–∞–º–Ω–∏—Ü—ñ –ï–Ω–µ—Ä–≥—ñ—ó! ‚ö°\n"
            "–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é –¥–ª—è –≤–∞—à–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üí™.\n"
            "–û–Ω–æ–≤—ñ—Ç—å —Å–∏–ª–∏ —ñ –ø—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ —Å–≤–æ—é –ø–æ–¥–æ—Ä–æ–∂! üåü"
        ), 
        reply_markup=menu_massage_room()
    )

    
@massage_room_router.callback_query(SelectCountGetEnergy.filter())
async def select_count_add_energy_handler(query: CallbackQuery, character: Character, callback_data: SelectCountGetEnergy):
    price_energy = CONST_PRICE_ENERGY[callback_data.count_energy]
    payment = CreatePayment(
        price=price_energy,
        name_product=f"Buy {callback_data.count_energy} energy",
        webhook_url = CALLBACK_URL_WEBHOOK_ENERGY
    )
    url_payment_response = await payment.send_request()
    if not url_payment_response:
        return await query.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞")
    
    order_id = url_payment_response['invoiceId']
    url_payment = url_payment_response['pageUrl']
    payment = await PaymentServise.create_payment(
        price=price_energy,
        user_id=character.characters_user_id,
        order_id=order_id
    )    
    await PaymentServise.create_energy_payment(
        order_id = payment.order_id,
        amount_energy = callback_data.count_energy
    )
    
    await query.message.answer(f"–ö—É–ø–∏—Ç—å üîã {callback_data.count_energy} –∑–∞ {price_energy} UAH",
                               reply_markup=send_payment_keyboard(url_payment))
