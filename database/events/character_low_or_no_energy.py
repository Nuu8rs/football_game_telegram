from enum import Enum

from aiogram import Bot

from bot.keyboards.gym_keyboard import no_energy_keyboard

from database.models.character import Character

from constants import LOW_ENERGY_PHOTO

from loader import bot
from logging_config import logger

from .base_event import BaseEventListener


class TypeLowEnergy(int, Enum):
    LOW_ENERGY = 20
    ZERO_ENERGY = 0
    
TEXT_LOW_ENERGY = """
‚ö†Ô∏è <b>–ï–Ω–µ—Ä–≥—ñ—è –º–∞–π–∂–µ –Ω–∞ –Ω—É–ª—ñ!</b>  

üîã –í–∞—à —Ä—ñ–≤–µ–Ω—å –µ–Ω–µ—Ä–≥—ñ—ó –≤–ø–∞–≤ –Ω–∏–∂—á–µ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–∑–Ω–∞—á–∫–∏, —ñ —Ü–µ –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å —É –≥—Ä—ñ. –ù–µ –¥–∞–π—Ç–µ —Ü—å–æ–º—É –∑—É–ø–∏–Ω–∏—Ç–∏ –≤–∞—Å!  

‚úÖ <i>–ë–µ–∑ –ø–µ—Ä–µ—Ä–≤–∏ –Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è ‚Äî –≥—Ä–∞–π—Ç–µ –±–µ–∑ –∑—É–ø–∏–Ω–æ–∫!</i>  
‚úÖ <i>–ó–∞–±–µ–∑–ø–µ—á—Ç–µ —Å–æ–±—ñ –ø–µ—Ä–µ–≤–∞–≥—É –Ω–∞–¥ —Å—É–ø–µ—Ä–Ω–∏–∫–∞–º–∏!</i>  

‚ö°Ô∏è <b>–ù–µ –∑—É–ø–∏–Ω—è–π—Ç–µ—Å—å!</b>  
–ü–æ–ø–æ–≤–Ω—ñ—Ç—å –µ–Ω–µ—Ä–≥—ñ—é –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑, —â–æ–± –∑–∞–ª–∏—à–∞—Ç–∏—Å—è –≤ –≥—Ä—ñ —Ç–∞ –¥–æ—Å—è–≥–∞—Ç–∏ –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç!  
"""
   
TEXT_ZERO_ENERGY = """
‚ö†Ô∏è <b>–ï–Ω–µ—Ä–≥—ñ—è –Ω–∞ –Ω—É–ª—ñ!</b>

üîã –í–∞—à —Ä—ñ–≤–µ–Ω—å –µ–Ω–µ—Ä–≥—ñ—ó –≤–ø–∞–≤ –Ω–∏–∂—á–µ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–∑–Ω–∞—á–∫–∏, —ñ —Ü–µ –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å —É –≥—Ä—ñ. –ù–µ –¥–∞–π—Ç–µ —Ü—å–æ–º—É –∑—É–ø–∏–Ω–∏—Ç–∏ –≤–∞—Å!

‚úÖ <i>–®–≤–∏–¥–∫–µ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó ‚Äî –±—ñ–ª—å—à–µ —Å–∏–ª –¥–ª—è –Ω–æ–≤–∏—Ö –∑–≤–µ—Ä—à–µ–Ω—å!</i>
‚úÖ <i>–ë–µ–∑ –ø–µ—Ä–µ—Ä–≤–∏ –Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è ‚Äî –≥—Ä–∞–π—Ç–µ –±–µ–∑ –∑—É–ø–∏–Ω–æ–∫!</i>
‚úÖ <i>–ó–∞–±–µ–∑–ø–µ—á—Ç–µ —Å–æ–±—ñ –ø–µ—Ä–µ–≤–∞–≥—É –Ω–∞–¥ —Å—É–ø–µ—Ä–Ω–∏–∫–∞–º–∏!</i>

‚ö° <b>–ù–µ –∑—É–ø–∏–Ω—è–π—Ç–µ—Å—å!</b>
–ü–æ–ø–æ–≤–Ω—ñ—Ç—å –µ–Ω–µ—Ä–≥—ñ—é –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑, —â–æ–± –∑–∞–ª–∏—à–∞—Ç–∏—Å—è –≤ –≥—Ä—ñ —Ç–∞ –¥–æ—Å—è–≥–∞—Ç–∏ –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç!
"""
    
TEXT_LOW_ENERGY = {
    TypeLowEnergy.LOW_ENERGY: TEXT_LOW_ENERGY,
    TypeLowEnergy.ZERO_ENERGY: TEXT_ZERO_ENERGY,
}


class EnergyEventListener(BaseEventListener):
    _bot: Bot = bot 
    _by_energy_keyboard = no_energy_keyboard()
    
    async def handle_event(self, character: Character) -> None:
        if not self.valide_low_energy(character):
            return
        type_low_energy = self.get_type_energy(character)
        await self._send_message(character, type_low_energy)
        
    async def _send_message(
        self, 
        character: Character,
        type_low_energy: TypeLowEnergy
    ) -> None:
        text = TEXT_LOW_ENERGY[type_low_energy]
        
        try:
            await self._bot.send_photo(
                photo        = LOW_ENERGY_PHOTO,
                chat_id      = character.characters_user_id,
                caption      = text,
                reply_markup = self._by_energy_keyboard
            )
        except Exception as E:
            logger.error(
                f"Error send message to character: {character.name}"
            )
            
    @staticmethod
    def valide_low_energy(character: Character) -> bool:
        if character.current_energy < TypeLowEnergy.LOW_ENERGY:
            return True
        
        if not character.current_energy:
            return True
        
        return False
    
    @staticmethod
    def get_type_energy(character: Character) -> TypeLowEnergy:
        if not character.current_energy:
            return TypeLowEnergy.ZERO_ENERGY
        
        if character.current_energy < TypeLowEnergy.LOW_ENERGY:
            return TypeLowEnergy.LOW_ENERGY
